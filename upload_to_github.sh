#!/bin/bash

# Script para subir o projeto AlugueisV4 para GitHub
# Uso: ./upload_to_github.sh <nome-do-repositorio>

set -e

# Verificar se foi passado o nome do reposit√≥rio
if [ $# -eq 0 ]; then
    echo "Erro: Voc√™ deve fornecer o nome do reposit√≥rio como par√¢metro"
    echo "Uso: $0 <nome-do-repositorio>"
    echo "Exemplo: $0 sistema-alugueis-v4"
    exit 1
fi

REPO_NAME=$1
GITHUB_USER="Mlocoes"

echo "üöÄ Iniciando upload do projeto AlugueisV4 para GitHub..."
echo "üìÅ Reposit√≥rio: $REPO_NAME"
echo "üë§ Usu√°rio: $GITHUB_USER"
echo ""

# Verificar se git est√° instalado
if ! command -v git &> /dev/null; then
    echo "‚ùå Git n√£o est√° instalado. Instale o git primeiro."
    exit 1
fi

# Verificar se gh (GitHub CLI) est√° instalado
if ! command -v gh &> /dev/null; then
    echo "‚ö†Ô∏è  GitHub CLI n√£o est√° instalado."
    echo "üìù Voc√™ pode instal√°-lo com: sudo apt install gh"
    echo "üîó Ou baixe de: https://cli.github.com/"
    echo ""
    echo "Continuando sem GitHub CLI..."
    USE_GH=false
else
    USE_GH=true
fi

# Inicializar reposit√≥rio git se n√£o existir
if [ ! -d ".git" ]; then
    echo "üìù Inicializando reposit√≥rio git..."
    git init
    echo "‚úÖ Reposit√≥rio git inicializado"
else
    echo "‚úÖ Reposit√≥rio git j√° existe"
fi

# Configurar usu√°rio git (se n√£o estiver configurado)
if [ -z "$(git config user.name)" ]; then
    echo "üìù Configurando usu√°rio git..."
    git config user.name "Mlocoes"
    git config user.email "mlocoes@example.com"
    echo "‚úÖ Usu√°rio git configurado"
fi

# Adicionar .gitignore se n√£o existir
if [ ! -f ".gitignore" ]; then
    echo "üìù Criando .gitignore..."
    cat > .gitignore << 'EOF'
# Arquivos de banco de dados
*.db
*.sqlite
*.sqlite3

# Ambiente virtual Python
venv/
env/
ENV/
.venv/

# Arquivos de log
*.log
server.log
monitor.log

# Arquivos tempor√°rios
*.tmp
*.temp
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Arquivos de configura√ß√£o sens√≠veis
.env
.env.local
.env.production

# Arquivos do sistema
.DS_Store
Thumbs.db

# Arquivos de backup
*.bak
*.backup
*~

# Arquivos de IDE
.vscode/
.idea/
*.swp
*.swo

# Arquivos de teste tempor√°rios
test_*.py
debug_*.html
teste_*.xlsx
EOF
    echo "‚úÖ .gitignore criado"
fi

# Adicionar todos os arquivos
echo "üìù Adicionando arquivos ao git..."
git add .

# Fazer commit inicial
echo "üìù Fazendo commit inicial..."
git commit -m "Initial commit - Sistema de Alugueis V4

- Sistema completo de gest√£o de alugu√©is
- Backend FastAPI com autentica√ß√£o JWT
- Frontend com JavaScript vanilla
- Banco de dados SQLite
- Docker containerizado
- Funcionalidades: Im√≥veis, Propriet√°rios, Participa√ß√µes, Alugu√©is"

echo "‚úÖ Commit realizado"

# Criar reposit√≥rio no GitHub
if [ "$USE_GH" = true ]; then
    echo "üìù Criando reposit√≥rio no GitHub..."
    if gh repo create "$REPO_NAME" --public --source=. --remote=origin --push; then
        echo "‚úÖ Reposit√≥rio criado e c√≥digo enviado para GitHub!"
        echo "üîó URL: https://github.com/$GITHUB_USER/$REPO_NAME"
    else
        echo "‚ùå Erro ao criar reposit√≥rio com GitHub CLI"
        echo "üìù Voc√™ pode criar manualmente em: https://github.com/new"
        echo "üìù Depois execute:"
        echo "   git remote add origin https://github.com/$GITHUB_USER/$REPO_NAME.git"
        echo "   git push -u origin main"
    fi
else
    echo "üìù GitHub CLI n√£o encontrado. Crie o reposit√≥rio manualmente:"
    echo "   1. Acesse: https://github.com/new"
    echo "   2. Nome do reposit√≥rio: $REPO_NAME"
    echo "   3. Deixe p√∫blico"
    echo "   4. N√£o inicialize com README, .gitignore ou license"
    echo ""
    echo "üìù Depois execute estes comandos:"
    echo "   git remote add origin https://github.com/$GITHUB_USER/$REPO_NAME.git"
    echo "   git push -u origin main"
    echo ""
    echo "üîó URL do reposit√≥rio ser√°: https://github.com/$GITHUB_USER/$REPO_NAME"
fi

echo ""
echo "üéâ Processo conclu√≠do!"
echo "üìö Documenta√ß√£o importante:"
echo "   - README.md cont√©m instru√ß√µes de instala√ß√£o"
echo "   - docker-compose.yml para executar o sistema"
echo "   - requirements.txt para depend√™ncias Python"